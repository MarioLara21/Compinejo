
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Nov 04 17:26:29 UTC 2024
//----------------------------------------------------


/** CUP v0.10k generated parser.
  * @version Mon Nov 04 17:26:29 UTC 2024
  */
public class CParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CParser() {super();}

  /** Constructor which sets the default scanner. */
  public CParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\075\000\002\007\004\000\002\002\004\000\002\007" +
    "\004\000\002\007\003\000\002\003\006\000\002\003\005" +
    "\000\002\003\006\000\002\003\005\000\002\005\005\000" +
    "\002\005\003\000\002\005\003\000\002\004\003\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\004" +
    "\003\000\002\010\005\000\002\011\005\000\002\011\003" +
    "\000\002\011\003\000\002\006\013\000\002\006\013\000" +
    "\002\012\006\000\002\012\004\000\002\012\002\000\002" +
    "\013\004\000\002\013\004\000\002\013\003\000\002\013" +
    "\003\000\002\017\004\000\002\017\003\000\002\021\003" +
    "\000\002\021\003\000\002\021\003\000\002\016\005\000" +
    "\002\016\005\000\002\016\005\000\002\016\005\000\002" +
    "\016\005\000\002\016\005\000\002\016\005\000\002\016" +
    "\005\000\002\016\005\000\002\016\005\000\002\016\004" +
    "\000\002\016\004\000\002\016\004\000\002\016\004\000" +
    "\002\016\003\000\002\016\003\000\002\016\005\000\002" +
    "\020\005\000\002\020\005\000\002\020\005\000\002\020" +
    "\005\000\002\020\005\000\002\020\005\000\002\020\005" +
    "\000\002\020\005\000\002\020\004\000\002\020\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\167\000\020\003\012\067\014\070\016\104\004\105" +
    "\005\110\015\121\007\001\002\000\006\003\ufff6\062\ufff6" +
    "\001\002\000\006\003\ufff4\062\ufff4\001\002\000\020\003" +
    "\012\067\014\070\016\104\004\105\005\110\015\121\007" +
    "\001\002\000\004\062\161\001\002\000\004\002\160\001" +
    "\002\000\022\002\ufffe\003\012\067\014\070\016\104\004" +
    "\105\005\110\015\121\007\001\002\000\006\003\ufff2\062" +
    "\ufff2\001\002\000\006\003\021\062\036\001\002\000\006" +
    "\003\ufff5\062\ufff5\001\002\000\006\003\ufff3\062\ufff3\001" +
    "\002\000\014\003\012\067\014\104\004\105\005\110\015" +
    "\001\002\000\006\003\021\062\020\001\002\000\010\004" +
    "\ufff8\005\ufff8\022\ufff8\001\002\000\010\004\ufff7\005\ufff7" +
    "\022\ufff7\001\002\000\004\005\035\001\002\000\010\004" +
    "\024\005\025\022\026\001\002\000\004\062\034\001\002" +
    "\000\034\003\ufffd\006\ufffd\007\ufffd\021\ufffd\030\ufffd\062" +
    "\ufffd\063\ufffd\067\ufffd\070\ufffd\104\ufffd\105\ufffd\110\ufffd" +
    "\121\ufffd\001\002\000\006\003\030\063\027\001\002\000" +
    "\006\004\032\005\uffef\001\002\000\004\005\uffee\001\002" +
    "\000\004\005\ufff1\001\002\000\006\003\030\063\027\001" +
    "\002\000\004\005\ufff0\001\002\000\010\004\ufff9\005\ufff9" +
    "\022\ufff9\001\002\000\034\003\ufffb\006\ufffb\007\ufffb\021" +
    "\ufffb\030\ufffb\062\ufffb\063\ufffb\067\ufffb\070\ufffb\104\ufffb" +
    "\105\ufffb\110\ufffb\121\ufffb\001\002\000\012\004\ufff8\005" +
    "\ufff8\022\ufff8\030\043\001\002\000\004\005\042\001\002" +
    "\000\010\004\024\005\041\022\026\001\002\000\034\003" +
    "\ufffc\006\ufffc\007\ufffc\021\ufffc\030\ufffc\062\ufffc\063\ufffc" +
    "\067\ufffc\070\ufffc\104\ufffc\105\ufffc\110\ufffc\121\ufffc\001" +
    "\002\000\034\003\ufffa\006\ufffa\007\ufffa\021\ufffa\030\ufffa" +
    "\062\ufffa\063\ufffa\067\ufffa\070\ufffa\104\ufffa\105\ufffa\110" +
    "\ufffa\121\ufffa\001\002\000\016\003\012\031\uffe9\067\014" +
    "\104\004\105\005\110\015\001\002\000\004\062\154\001" +
    "\002\000\004\031\046\001\002\000\004\034\047\001\002" +
    "\000\032\003\064\006\062\007\054\021\053\030\055\062" +
    "\056\063\057\067\014\070\016\104\004\105\005\110\015" +
    "\001\002\000\034\003\064\006\062\007\054\021\053\030" +
    "\055\035\uffe6\062\056\063\057\067\014\070\016\104\004" +
    "\105\005\110\015\001\002\000\034\003\uffe3\006\uffe3\007" +
    "\uffe3\021\uffe3\030\uffe3\035\uffe3\062\uffe3\063\uffe3\067\uffe3" +
    "\070\uffe3\104\uffe3\105\uffe3\110\uffe3\001\002\000\006\003" +
    "\021\062\020\001\002\000\016\006\062\007\054\021\053" +
    "\030\055\062\056\063\057\001\002\000\004\062\151\001" +
    "\002\000\016\006\062\007\054\021\053\030\055\062\056" +
    "\063\057\001\002\000\056\005\uffd0\006\145\007\144\010" +
    "\uffd0\011\uffd0\012\uffd0\014\uffd0\015\uffd0\016\uffd0\017\uffd0" +
    "\020\uffd0\022\uffd0\023\uffd0\024\uffd0\025\uffd0\026\uffd0\027" +
    "\uffd0\031\uffd0\040\uffd0\041\uffd0\042\uffd0\043\uffd0\001\002" +
    "\000\052\005\uffd1\010\uffd1\011\uffd1\012\uffd1\014\uffd1\015" +
    "\uffd1\016\uffd1\017\uffd1\020\uffd1\022\uffd1\023\uffd1\024\uffd1" +
    "\025\uffd1\026\uffd1\027\uffd1\031\uffd1\040\uffd1\041\uffd1\042" +
    "\uffd1\043\uffd1\001\002\000\004\035\142\001\002\000\004" +
    "\005\141\001\002\000\004\062\140\001\002\000\032\003" +
    "\064\006\062\007\054\021\053\030\055\062\056\063\057" +
    "\067\014\070\016\104\004\105\005\110\015\001\002\000" +
    "\012\003\ufff2\005\uffe0\035\uffe5\062\ufff2\001\002\000\010" +
    "\005\uffe2\017\133\020\132\001\002\000\044\005\uffe1\010" +
    "\105\011\103\012\074\014\073\015\077\016\070\022\101" +
    "\023\075\024\067\025\104\026\071\027\076\040\106\041" +
    "\072\042\100\043\102\001\002\000\014\006\062\007\054" +
    "\030\110\062\056\063\057\001\002\000\014\006\062\007" +
    "\054\030\110\062\056\063\057\001\002\000\014\006\062" +
    "\007\054\030\110\062\056\063\057\001\002\000\014\006" +
    "\062\007\054\030\110\062\056\063\057\001\002\000\014" +
    "\006\062\007\054\030\110\062\056\063\057\001\002\000" +
    "\014\006\062\007\054\030\110\062\056\063\057\001\002" +
    "\000\014\006\062\007\054\030\110\062\056\063\057\001" +
    "\002\000\014\006\062\007\054\030\110\062\056\063\057" +
    "\001\002\000\014\006\062\007\054\030\110\062\056\063" +
    "\057\001\002\000\014\006\062\007\054\030\110\062\056" +
    "\063\057\001\002\000\014\006\062\007\054\030\110\062" +
    "\056\063\057\001\002\000\014\006\062\007\054\030\110" +
    "\062\056\063\057\001\002\000\014\006\062\007\054\030" +
    "\110\062\056\063\057\001\002\000\014\006\062\007\054" +
    "\030\110\062\056\063\057\001\002\000\014\006\062\007" +
    "\054\030\110\062\056\063\057\001\002\000\014\006\062" +
    "\007\054\030\110\062\056\063\057\001\002\000\052\005" +
    "\uffd9\010\uffd9\011\uffd9\012\uffd9\014\uffd9\015\uffd9\016\uffd9" +
    "\017\uffd9\020\uffd9\022\uffd9\023\075\024\067\025\104\026" +
    "\071\027\076\031\uffd9\040\uffd9\041\uffd9\042\uffd9\043\uffd9" +
    "\001\002\000\014\006\062\007\054\030\110\062\056\063" +
    "\057\001\002\000\030\022\101\023\075\024\067\025\104" +
    "\026\071\027\076\031\112\040\106\041\072\042\100\043" +
    "\102\001\002\000\052\005\uffcf\010\uffcf\011\uffcf\012\uffcf" +
    "\014\uffcf\015\uffcf\016\uffcf\017\uffcf\020\uffcf\022\uffcf\023" +
    "\uffcf\024\uffcf\025\uffcf\026\uffcf\027\uffcf\031\uffcf\040\uffcf" +
    "\041\uffcf\042\uffcf\043\uffcf\001\002\000\036\005\uffce\017" +
    "\uffce\020\uffce\022\101\023\075\024\067\025\104\026\071" +
    "\027\076\031\uffce\040\106\041\072\042\100\043\102\001" +
    "\002\000\052\005\uffdd\010\uffdd\011\uffdd\012\uffdd\014\uffdd" +
    "\015\uffdd\016\uffdd\017\uffdd\020\uffdd\022\uffdd\023\uffdd\024" +
    "\uffdd\025\uffdd\026\uffdd\027\uffdd\031\uffdd\040\uffdd\041\uffdd" +
    "\042\uffdd\043\uffdd\001\002\000\036\005\uffcc\017\uffcc\020" +
    "\uffcc\022\101\023\075\024\067\025\104\026\071\027\076" +
    "\031\uffcc\040\106\041\072\042\100\043\102\001\002\000" +
    "\052\005\uffd6\010\uffd6\011\uffd6\012\uffd6\014\uffd6\015\uffd6" +
    "\016\uffd6\017\uffd6\020\uffd6\022\uffd6\023\075\024\067\025" +
    "\104\026\071\027\076\031\uffd6\040\uffd6\041\uffd6\042\uffd6" +
    "\043\uffd6\001\002\000\052\005\uffda\010\uffda\011\uffda\012" +
    "\uffda\014\uffda\015\uffda\016\uffda\017\uffda\020\uffda\022\uffda" +
    "\023\075\024\067\025\104\026\071\027\076\031\uffda\040" +
    "\106\041\072\042\100\043\102\001\002\000\052\005\uffd7" +
    "\010\uffd7\011\uffd7\012\uffd7\014\uffd7\015\uffd7\016\uffd7\017" +
    "\uffd7\020\uffd7\022\uffd7\023\075\024\067\025\104\026\071" +
    "\027\076\031\uffd7\040\uffd7\041\uffd7\042\uffd7\043\uffd7\001" +
    "\002\000\036\005\uffc9\017\uffc9\020\uffc9\022\101\023\075" +
    "\024\067\025\104\026\071\027\076\031\uffc9\040\106\041" +
    "\072\042\100\043\102\001\002\000\052\005\uffdb\010\uffdb" +
    "\011\uffdb\012\uffdb\014\uffdb\015\uffdb\016\uffdb\017\uffdb\020" +
    "\uffdb\022\uffdb\023\uffdb\024\uffdb\025\uffdb\026\uffdb\027\uffdb" +
    "\031\uffdb\040\uffdb\041\uffdb\042\uffdb\043\uffdb\001\002\000" +
    "\052\005\uffdf\010\uffdf\011\uffdf\012\uffdf\014\uffdf\015\uffdf" +
    "\016\uffdf\017\uffdf\020\uffdf\022\uffdf\023\uffdf\024\uffdf\025" +
    "\104\026\071\027\076\031\uffdf\040\uffdf\041\uffdf\042\uffdf" +
    "\043\uffdf\001\002\000\036\005\uffcb\017\uffcb\020\uffcb\022" +
    "\101\023\075\024\067\025\104\026\071\027\076\031\uffcb" +
    "\040\106\041\072\042\100\043\102\001\002\000\036\005" +
    "\uffca\017\uffca\020\uffca\022\101\023\075\024\067\025\104" +
    "\026\071\027\076\031\uffca\040\106\041\072\042\100\043" +
    "\102\001\002\000\052\005\uffd8\010\uffd8\011\uffd8\012\uffd8" +
    "\014\uffd8\015\uffd8\016\uffd8\017\uffd8\020\uffd8\022\uffd8\023" +
    "\075\024\067\025\104\026\071\027\076\031\uffd8\040\uffd8" +
    "\041\uffd8\042\uffd8\043\uffd8\001\002\000\052\005\uffdc\010" +
    "\uffdc\011\uffdc\012\uffdc\014\uffdc\015\uffdc\016\uffdc\017\uffdc" +
    "\020\uffdc\022\uffdc\023\uffdc\024\uffdc\025\uffdc\026\uffdc\027" +
    "\uffdc\031\uffdc\040\uffdc\041\uffdc\042\uffdc\043\uffdc\001\002" +
    "\000\036\005\uffcd\017\uffcd\020\uffcd\022\101\023\075\024" +
    "\067\025\104\026\071\027\076\031\uffcd\040\106\041\072" +
    "\042\100\043\102\001\002\000\052\005\uffde\010\uffde\011" +
    "\uffde\012\uffde\014\uffde\015\uffde\016\uffde\017\uffde\020\uffde" +
    "\022\uffde\023\uffde\024\uffde\025\104\026\071\027\076\031" +
    "\uffde\040\uffde\041\uffde\042\uffde\043\uffde\001\002\000\016" +
    "\006\062\007\054\021\053\030\055\062\056\063\057\001" +
    "\002\000\016\006\062\007\054\021\053\030\055\062\056" +
    "\063\057\001\002\000\042\010\105\011\103\012\074\014" +
    "\073\015\077\016\070\022\101\023\075\024\067\025\104" +
    "\026\071\027\076\040\106\041\072\042\100\043\102\001" +
    "\002\000\012\005\uffc8\017\uffc8\020\132\031\uffc8\001\002" +
    "\000\012\005\uffc7\017\uffc7\020\uffc7\031\uffc7\001\002\000" +
    "\004\035\uffe8\001\002\000\052\005\uffd3\010\uffd3\011\uffd3" +
    "\012\uffd3\014\uffd3\015\uffd3\016\uffd3\017\uffd3\020\uffd3\022" +
    "\uffd3\023\uffd3\024\uffd3\025\uffd3\026\uffd3\027\uffd3\031\uffd3" +
    "\040\uffd3\041\uffd3\042\uffd3\043\uffd3\001\002\000\034\003" +
    "\uffe4\006\uffe4\007\uffe4\021\uffe4\030\uffe4\035\uffe4\062\uffe4" +
    "\063\uffe4\067\uffe4\070\uffe4\104\uffe4\105\uffe4\110\uffe4\001" +
    "\002\000\004\005\143\001\002\000\022\002\uffed\003\uffed" +
    "\067\uffed\070\uffed\104\uffed\105\uffed\110\uffed\121\uffed\001" +
    "\002\000\052\005\uffd4\010\uffd4\011\uffd4\012\uffd4\014\uffd4" +
    "\015\uffd4\016\uffd4\017\uffd4\020\uffd4\022\uffd4\023\uffd4\024" +
    "\uffd4\025\uffd4\026\uffd4\027\uffd4\031\uffd4\040\uffd4\041\uffd4" +
    "\042\uffd4\043\uffd4\001\002\000\052\005\uffd5\010\uffd5\011" +
    "\uffd5\012\uffd5\014\uffd5\015\uffd5\016\uffd5\017\uffd5\020\uffd5" +
    "\022\uffd5\023\uffd5\024\uffd5\025\uffd5\026\uffd5\027\uffd5\031" +
    "\uffd5\040\uffd5\041\uffd5\042\uffd5\043\uffd5\001\002\000\044" +
    "\010\105\011\103\012\074\014\073\015\077\016\070\022" +
    "\101\023\075\024\067\025\104\026\071\027\076\031\112" +
    "\040\106\041\072\042\100\043\102\001\002\000\010\017" +
    "\133\020\132\031\150\001\002\000\012\005\uffc5\017\uffc5" +
    "\020\uffc5\031\uffc5\001\002\000\052\005\uffd2\010\uffd2\011" +
    "\uffd2\012\uffd2\014\uffd2\015\uffd2\016\uffd2\017\uffd2\020\uffd2" +
    "\022\uffd2\023\uffd2\024\uffd2\025\uffd2\026\uffd2\027\uffd2\031" +
    "\uffd2\040\uffd2\041\uffd2\042\uffd2\043\uffd2\001\002\000\012" +
    "\005\uffc6\017\uffc6\020\uffc6\031\uffc6\001\002\000\004\035" +
    "\uffe7\001\002\000\006\004\155\031\uffea\001\002\000\016" +
    "\003\012\031\uffe9\067\014\104\004\105\005\110\015\001" +
    "\002\000\004\031\uffeb\001\002\000\004\002\uffff\001\002" +
    "\000\004\002\000\001\002\000\004\030\162\001\002\000" +
    "\016\003\012\031\uffe9\067\014\104\004\105\005\110\015" +
    "\001\002\000\004\031\164\001\002\000\004\034\165\001" +
    "\002\000\032\003\064\006\062\007\054\021\053\030\055" +
    "\062\056\063\057\067\014\070\016\104\004\105\005\110" +
    "\015\001\002\000\004\035\167\001\002\000\004\005\170" +
    "\001\002\000\022\002\uffec\003\uffec\067\uffec\070\uffec\104" +
    "\uffec\105\uffec\110\uffec\121\uffec\001\002\000\004\002\001" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\167\000\012\003\005\004\012\006\010\007\007\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\003\005" +
    "\004\012\006\010\007\170\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\003\005\004\012\006\010\007\156" +
    "\001\001\000\002\001\001\000\006\005\037\010\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\016" +
    "\001\001\000\006\005\022\010\021\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\030\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\032\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\004\043\012\044\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\062\004\051\013" +
    "\057\015\050\016\065\017\047\020\064\021\060\001\001" +
    "\000\022\003\062\004\051\013\152\015\050\016\065\017" +
    "\047\020\064\021\060\001\001\000\002\001\001\000\006" +
    "\005\037\010\036\001\001\000\006\016\133\020\151\001" +
    "\001\000\002\001\001\000\006\016\145\020\146\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\062\004\051" +
    "\013\136\015\050\016\065\017\047\020\064\021\060\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\130\001\001\000\004\016\127\001\001\000" +
    "\004\016\126\001\001\000\004\016\125\001\001\000\004" +
    "\016\124\001\001\000\004\016\123\001\001\000\004\016" +
    "\122\001\001\000\004\016\121\001\001\000\004\016\120" +
    "\001\001\000\004\016\117\001\001\000\004\016\116\001" +
    "\001\000\004\016\115\001\001\000\004\016\114\001\001" +
    "\000\004\016\113\001\001\000\004\016\112\001\001\000" +
    "\004\016\106\001\001\000\002\001\001\000\004\016\110" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\016\133\020\135\001\001" +
    "\000\006\016\133\020\134\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\004\043\012\155\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\004\043" +
    "\012\162\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\003\062\004\051\013\165\015\050\016\065\017\047" +
    "\020\064\021\060\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CParser$actions {
  private final CParser parser;

  /** Constructor */
  CUP$CParser$actions(CParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CParser$do_action(
    int                        CUP$CParser$act_num,
    java_cup.runtime.lr_parser CUP$CParser$parser,
    java.util.Stack            CUP$CParser$stack,
    int                        CUP$CParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CParser$result;

      /* select the action based on the action number */
      switch (CUP$CParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // booleanExpression ::= LPAREN booleanExpression RPAREN 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // booleanExpression ::= NOT booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // booleanExpression ::= booleanExpression ANDAND booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // booleanExpression ::= booleanExpression OROR booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // booleanExpression ::= arithmeticExpression LESS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // booleanExpression ::= arithmeticExpression LESSEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // booleanExpression ::= arithmeticExpression GREATER arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // booleanExpression ::= arithmeticExpression GREATEREQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // booleanExpression ::= arithmeticExpression NOTEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // booleanExpression ::= arithmeticExpression EQUALS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // arithmeticExpression ::= LPAREN arithmeticExpression RPAREN 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // arithmeticExpression ::= ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // arithmeticExpression ::= NUM 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // arithmeticExpression ::= DECREMENT ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // arithmeticExpression ::= INCREMENT ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // arithmeticExpression ::= ID DECREMENT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // arithmeticExpression ::= ID INCREMENT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // arithmeticExpression ::= arithmeticExpression DIVIDEEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // arithmeticExpression ::= arithmeticExpression TIMESEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // arithmeticExpression ::= arithmeticExpression MINUSEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // arithmeticExpression ::= arithmeticExpression PLUSEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // arithmeticExpression ::= arithmeticExpression ASSIGN arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // arithmeticExpression ::= arithmeticExpression MODULO arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // arithmeticExpression ::= arithmeticExpression DIVIDE arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // arithmeticExpression ::= arithmeticExpression TIMES arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // arithmeticExpression ::= arithmeticExpression MINUS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // arithmeticExpression ::= arithmeticExpression PLUS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // expression ::= error 
            {
              Object RESULT = null;
		System.out.println("Invalid expression");
              CUP$CParser$result = new java_cup.runtime.Symbol(15/*expression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // expression ::= arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(15/*expression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // expression ::= booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(15/*expression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // statement ::= funcBody 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(13/*statement*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // statement ::= expression SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(13/*statement*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // funcImpl ::= error 
            {
              Object RESULT = null;
		System.out.println("Function implementation error");
              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // funcImpl ::= statement 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // funcImpl ::= statement funcImpl 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // funcImpl ::= varDeclaration funcImpl 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // paramChain ::= 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // paramChain ::= type ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // paramChain ::= type ID COMMA paramChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // funcDeclaration ::= VOID ID LPAREN paramChain RPAREN LBRACE funcImpl RBRACE SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(4/*funcDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // funcDeclaration ::= type ID LPAREN paramChain RPAREN LBRACE funcImpl RBRACE SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(4/*funcDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // asignationChain ::= error 
            {
              Object RESULT = null;
		System.out.println("Variable assignation error");
              CUP$CParser$result = new java_cup.runtime.Symbol(7/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // asignationChain ::= NUM 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(7/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // asignationChain ::= NUM COMMA asignationChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(7/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // varAsignation ::= idChain ASSIGN asignationChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(6/*varAsignation*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // type ::= error 
            {
              Object RESULT = null;
		System.out.println("Invalid type");
              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // type ::= SHORT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // type ::= LONG 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // type ::= CHAR 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // type ::= INT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // idChain ::= error 
            {
              Object RESULT = null;
		System.out.println("Variable declaration error");
              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // idChain ::= ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // idChain ::= idChain COMMA ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // varDeclaration ::= type varAsignation SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // varDeclaration ::= CONST type varAsignation SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // varDeclaration ::= type idChain SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // varDeclaration ::= CONST type idChain SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // globalProg ::= funcDeclaration 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // globalProg ::= funcDeclaration globalProg 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= globalProg EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CParser$stack.elementAt(CUP$CParser$top-1)).value;
		RESULT = start_val;
              CUP$CParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$CParser$parser.done_parsing();
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // globalProg ::= varDeclaration globalProg 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}


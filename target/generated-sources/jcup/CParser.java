
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sat Nov 02 00:55:51 UTC 2024
//----------------------------------------------------


/** CUP v0.10k generated parser.
  * @version Sat Nov 02 00:55:51 UTC 2024
  */
public class CParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CParser() {super();}

  /** Constructor which sets the default scanner. */
  public CParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\070\000\002\007\004\000\002\002\004\000\002\007" +
    "\004\000\002\007\003\000\002\003\006\000\002\003\005" +
    "\000\002\003\006\000\002\003\005\000\002\005\005\000" +
    "\002\005\003\000\002\004\003\000\002\004\003\000\002" +
    "\004\003\000\002\004\003\000\002\010\005\000\002\011" +
    "\005\000\002\011\003\000\002\006\013\000\002\006\013" +
    "\000\002\012\006\000\002\012\004\000\002\012\002\000" +
    "\002\013\004\000\002\013\004\000\002\013\003\000\002" +
    "\017\004\000\002\017\003\000\002\021\003\000\002\021" +
    "\003\000\002\016\005\000\002\016\005\000\002\016\005" +
    "\000\002\016\005\000\002\016\005\000\002\016\005\000" +
    "\002\016\005\000\002\016\005\000\002\016\005\000\002" +
    "\016\005\000\002\016\004\000\002\016\004\000\002\016" +
    "\004\000\002\016\004\000\002\016\003\000\002\016\003" +
    "\000\002\016\005\000\002\020\005\000\002\020\005\000" +
    "\002\020\005\000\002\020\005\000\002\020\005\000\002" +
    "\020\005\000\002\020\005\000\002\020\005\000\002\020" +
    "\004\000\002\020\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\163\000\016\067\013\070\015\104\004\105\005\110" +
    "\014\121\007\001\002\000\004\062\ufff7\001\002\000\004" +
    "\062\ufff5\001\002\000\016\067\013\070\015\104\004\105" +
    "\005\110\014\121\007\001\002\000\004\062\155\001\002" +
    "\000\004\002\154\001\002\000\020\002\ufffe\067\013\070" +
    "\015\104\004\105\005\110\014\121\007\001\002\000\004" +
    "\062\033\001\002\000\004\062\ufff6\001\002\000\004\062" +
    "\ufff4\001\002\000\012\067\013\104\004\105\005\110\014" +
    "\001\002\000\004\062\017\001\002\000\010\004\ufff8\005" +
    "\ufff8\022\ufff8\001\002\000\004\005\032\001\002\000\010" +
    "\004\022\005\023\022\024\001\002\000\004\062\031\001" +
    "\002\000\032\006\ufffd\007\ufffd\021\ufffd\030\ufffd\062\ufffd" +
    "\063\ufffd\067\ufffd\070\ufffd\104\ufffd\105\ufffd\110\ufffd\121" +
    "\ufffd\001\002\000\004\063\025\001\002\000\006\004\027" +
    "\005\ufff1\001\002\000\004\005\ufff3\001\002\000\004\063" +
    "\025\001\002\000\004\005\ufff2\001\002\000\010\004\ufff9" +
    "\005\ufff9\022\ufff9\001\002\000\032\006\ufffb\007\ufffb\021" +
    "\ufffb\030\ufffb\062\ufffb\063\ufffb\067\ufffb\070\ufffb\104\ufffb" +
    "\105\ufffb\110\ufffb\121\ufffb\001\002\000\012\004\ufff8\005" +
    "\ufff8\022\ufff8\030\040\001\002\000\004\005\037\001\002" +
    "\000\010\004\022\005\036\022\024\001\002\000\032\006" +
    "\ufffc\007\ufffc\021\ufffc\030\ufffc\062\ufffc\063\ufffc\067\ufffc" +
    "\070\ufffc\104\ufffc\105\ufffc\110\ufffc\121\ufffc\001\002\000" +
    "\032\006\ufffa\007\ufffa\021\ufffa\030\ufffa\062\ufffa\063\ufffa" +
    "\067\ufffa\070\ufffa\104\ufffa\105\ufffa\110\ufffa\121\ufffa\001" +
    "\002\000\014\031\uffec\067\013\104\004\105\005\110\014" +
    "\001\002\000\004\062\150\001\002\000\004\031\043\001" +
    "\002\000\004\034\044\001\002\000\030\006\057\007\051" +
    "\021\050\030\052\062\053\063\054\067\013\070\015\104" +
    "\004\105\005\110\014\001\002\000\032\006\057\007\051" +
    "\021\050\030\052\035\uffe9\062\053\063\054\067\013\070" +
    "\015\104\004\105\005\110\014\001\002\000\032\006\uffe7" +
    "\007\uffe7\021\uffe7\030\uffe7\035\uffe7\062\uffe7\063\uffe7\067" +
    "\uffe7\070\uffe7\104\uffe7\105\uffe7\110\uffe7\001\002\000\004" +
    "\062\017\001\002\000\016\006\057\007\051\021\050\030" +
    "\052\062\053\063\054\001\002\000\004\062\145\001\002" +
    "\000\016\006\057\007\051\021\050\030\052\062\053\063" +
    "\054\001\002\000\056\005\uffd5\006\141\007\140\010\uffd5" +
    "\011\uffd5\012\uffd5\014\uffd5\015\uffd5\016\uffd5\017\uffd5\020" +
    "\uffd5\022\uffd5\023\uffd5\024\uffd5\025\uffd5\026\uffd5\027\uffd5" +
    "\031\uffd5\040\uffd5\041\uffd5\042\uffd5\043\uffd5\001\002\000" +
    "\052\005\uffd6\010\uffd6\011\uffd6\012\uffd6\014\uffd6\015\uffd6" +
    "\016\uffd6\017\uffd6\020\uffd6\022\uffd6\023\uffd6\024\uffd6\025" +
    "\uffd6\026\uffd6\027\uffd6\031\uffd6\040\uffd6\041\uffd6\042\uffd6" +
    "\043\uffd6\001\002\000\004\035\136\001\002\000\004\005" +
    "\135\001\002\000\004\062\134\001\002\000\030\006\057" +
    "\007\051\021\050\030\052\062\053\063\054\067\013\070" +
    "\015\104\004\105\005\110\014\001\002\000\010\005\uffe6" +
    "\017\127\020\126\001\002\000\044\005\uffe5\010\101\011" +
    "\100\012\067\014\070\015\074\016\065\022\073\023\071" +
    "\024\063\025\077\026\064\027\075\040\102\041\066\042" +
    "\072\043\076\001\002\000\014\006\057\007\051\030\104" +
    "\062\053\063\054\001\002\000\014\006\057\007\051\030" +
    "\104\062\053\063\054\001\002\000\014\006\057\007\051" +
    "\030\104\062\053\063\054\001\002\000\014\006\057\007" +
    "\051\030\104\062\053\063\054\001\002\000\014\006\057" +
    "\007\051\030\104\062\053\063\054\001\002\000\014\006" +
    "\057\007\051\030\104\062\053\063\054\001\002\000\014" +
    "\006\057\007\051\030\104\062\053\063\054\001\002\000" +
    "\014\006\057\007\051\030\104\062\053\063\054\001\002" +
    "\000\014\006\057\007\051\030\104\062\053\063\054\001" +
    "\002\000\014\006\057\007\051\030\104\062\053\063\054" +
    "\001\002\000\014\006\057\007\051\030\104\062\053\063" +
    "\054\001\002\000\014\006\057\007\051\030\104\062\053" +
    "\063\054\001\002\000\014\006\057\007\051\030\104\062" +
    "\053\063\054\001\002\000\014\006\057\007\051\030\104" +
    "\062\053\063\054\001\002\000\014\006\057\007\051\030" +
    "\104\062\053\063\054\001\002\000\014\006\057\007\051" +
    "\030\104\062\053\063\054\001\002\000\052\005\uffde\010" +
    "\uffde\011\uffde\012\uffde\014\uffde\015\uffde\016\uffde\017\uffde" +
    "\020\uffde\022\uffde\023\071\024\063\025\077\026\064\027" +
    "\075\031\uffde\040\uffde\041\uffde\042\uffde\043\uffde\001\002" +
    "\000\014\006\057\007\051\030\104\062\053\063\054\001" +
    "\002\000\030\022\073\023\071\024\063\025\077\026\064" +
    "\027\075\031\106\040\102\041\066\042\072\043\076\001" +
    "\002\000\052\005\uffd4\010\uffd4\011\uffd4\012\uffd4\014\uffd4" +
    "\015\uffd4\016\uffd4\017\uffd4\020\uffd4\022\uffd4\023\uffd4\024" +
    "\uffd4\025\uffd4\026\uffd4\027\uffd4\031\uffd4\040\uffd4\041\uffd4" +
    "\042\uffd4\043\uffd4\001\002\000\036\005\uffd3\017\uffd3\020" +
    "\uffd3\022\073\023\071\024\063\025\077\026\064\027\075" +
    "\031\uffd3\040\102\041\066\042\072\043\076\001\002\000" +
    "\036\005\uffd1\017\uffd1\020\uffd1\022\073\023\071\024\063" +
    "\025\077\026\064\027\075\031\uffd1\040\102\041\066\042" +
    "\072\043\076\001\002\000\052\005\uffe2\010\uffe2\011\uffe2" +
    "\012\uffe2\014\uffe2\015\uffe2\016\uffe2\017\uffe2\020\uffe2\022" +
    "\uffe2\023\uffe2\024\uffe2\025\uffe2\026\uffe2\027\uffe2\031\uffe2" +
    "\040\uffe2\041\uffe2\042\uffe2\043\uffe2\001\002\000\052\005" +
    "\uffdb\010\uffdb\011\uffdb\012\uffdb\014\uffdb\015\uffdb\016\uffdb" +
    "\017\uffdb\020\uffdb\022\uffdb\023\071\024\063\025\077\026" +
    "\064\027\075\031\uffdb\040\uffdb\041\uffdb\042\uffdb\043\uffdb" +
    "\001\002\000\052\005\uffe0\010\uffe0\011\uffe0\012\uffe0\014" +
    "\uffe0\015\uffe0\016\uffe0\017\uffe0\020\uffe0\022\uffe0\023\uffe0" +
    "\024\uffe0\025\uffe0\026\uffe0\027\uffe0\031\uffe0\040\uffe0\041" +
    "\uffe0\042\uffe0\043\uffe0\001\002\000\036\005\uffce\017\uffce" +
    "\020\uffce\022\073\023\071\024\063\025\077\026\064\027" +
    "\075\031\uffce\040\102\041\066\042\072\043\076\001\002" +
    "\000\052\005\uffdf\010\uffdf\011\uffdf\012\uffdf\014\uffdf\015" +
    "\uffdf\016\uffdf\017\uffdf\020\uffdf\022\uffdf\023\071\024\063" +
    "\025\077\026\064\027\075\031\uffdf\040\102\041\066\042" +
    "\072\043\076\001\002\000\052\005\uffdc\010\uffdc\011\uffdc" +
    "\012\uffdc\014\uffdc\015\uffdc\016\uffdc\017\uffdc\020\uffdc\022" +
    "\uffdc\023\071\024\063\025\077\026\064\027\075\031\uffdc" +
    "\040\uffdc\041\uffdc\042\uffdc\043\uffdc\001\002\000\052\005" +
    "\uffe4\010\uffe4\011\uffe4\012\uffe4\014\uffe4\015\uffe4\016\uffe4" +
    "\017\uffe4\020\uffe4\022\uffe4\023\uffe4\024\uffe4\025\077\026" +
    "\064\027\075\031\uffe4\040\uffe4\041\uffe4\042\uffe4\043\uffe4" +
    "\001\002\000\036\005\uffcf\017\uffcf\020\uffcf\022\073\023" +
    "\071\024\063\025\077\026\064\027\075\031\uffcf\040\102" +
    "\041\066\042\072\043\076\001\002\000\036\005\uffd0\017" +
    "\uffd0\020\uffd0\022\073\023\071\024\063\025\077\026\064" +
    "\027\075\031\uffd0\040\102\041\066\042\072\043\076\001" +
    "\002\000\052\005\uffdd\010\uffdd\011\uffdd\012\uffdd\014\uffdd" +
    "\015\uffdd\016\uffdd\017\uffdd\020\uffdd\022\uffdd\023\071\024" +
    "\063\025\077\026\064\027\075\031\uffdd\040\uffdd\041\uffdd" +
    "\042\uffdd\043\uffdd\001\002\000\036\005\uffd2\017\uffd2\020" +
    "\uffd2\022\073\023\071\024\063\025\077\026\064\027\075" +
    "\031\uffd2\040\102\041\066\042\072\043\076\001\002\000" +
    "\052\005\uffe1\010\uffe1\011\uffe1\012\uffe1\014\uffe1\015\uffe1" +
    "\016\uffe1\017\uffe1\020\uffe1\022\uffe1\023\uffe1\024\uffe1\025" +
    "\uffe1\026\uffe1\027\uffe1\031\uffe1\040\uffe1\041\uffe1\042\uffe1" +
    "\043\uffe1\001\002\000\052\005\uffe3\010\uffe3\011\uffe3\012" +
    "\uffe3\014\uffe3\015\uffe3\016\uffe3\017\uffe3\020\uffe3\022\uffe3" +
    "\023\uffe3\024\uffe3\025\077\026\064\027\075\031\uffe3\040" +
    "\uffe3\041\uffe3\042\uffe3\043\uffe3\001\002\000\016\006\057" +
    "\007\051\021\050\030\052\062\053\063\054\001\002\000" +
    "\016\006\057\007\051\021\050\030\052\062\053\063\054" +
    "\001\002\000\042\010\101\011\100\012\067\014\070\015" +
    "\074\016\065\022\073\023\071\024\063\025\077\026\064" +
    "\027\075\040\102\041\066\042\072\043\076\001\002\000" +
    "\012\005\uffcd\017\uffcd\020\126\031\uffcd\001\002\000\012" +
    "\005\uffcc\017\uffcc\020\uffcc\031\uffcc\001\002\000\004\035" +
    "\uffeb\001\002\000\052\005\uffd8\010\uffd8\011\uffd8\012\uffd8" +
    "\014\uffd8\015\uffd8\016\uffd8\017\uffd8\020\uffd8\022\uffd8\023" +
    "\uffd8\024\uffd8\025\uffd8\026\uffd8\027\uffd8\031\uffd8\040\uffd8" +
    "\041\uffd8\042\uffd8\043\uffd8\001\002\000\032\006\uffe8\007" +
    "\uffe8\021\uffe8\030\uffe8\035\uffe8\062\uffe8\063\uffe8\067\uffe8" +
    "\070\uffe8\104\uffe8\105\uffe8\110\uffe8\001\002\000\004\005" +
    "\137\001\002\000\020\002\ufff0\067\ufff0\070\ufff0\104\ufff0" +
    "\105\ufff0\110\ufff0\121\ufff0\001\002\000\052\005\uffd9\010" +
    "\uffd9\011\uffd9\012\uffd9\014\uffd9\015\uffd9\016\uffd9\017\uffd9" +
    "\020\uffd9\022\uffd9\023\uffd9\024\uffd9\025\uffd9\026\uffd9\027" +
    "\uffd9\031\uffd9\040\uffd9\041\uffd9\042\uffd9\043\uffd9\001\002" +
    "\000\052\005\uffda\010\uffda\011\uffda\012\uffda\014\uffda\015" +
    "\uffda\016\uffda\017\uffda\020\uffda\022\uffda\023\uffda\024\uffda" +
    "\025\uffda\026\uffda\027\uffda\031\uffda\040\uffda\041\uffda\042" +
    "\uffda\043\uffda\001\002\000\044\010\101\011\100\012\067" +
    "\014\070\015\074\016\065\022\073\023\071\024\063\025" +
    "\077\026\064\027\075\031\106\040\102\041\066\042\072" +
    "\043\076\001\002\000\010\017\127\020\126\031\144\001" +
    "\002\000\012\005\uffca\017\uffca\020\uffca\031\uffca\001\002" +
    "\000\052\005\uffd7\010\uffd7\011\uffd7\012\uffd7\014\uffd7\015" +
    "\uffd7\016\uffd7\017\uffd7\020\uffd7\022\uffd7\023\uffd7\024\uffd7" +
    "\025\uffd7\026\uffd7\027\uffd7\031\uffd7\040\uffd7\041\uffd7\042" +
    "\uffd7\043\uffd7\001\002\000\012\005\uffcb\017\uffcb\020\uffcb" +
    "\031\uffcb\001\002\000\004\035\uffea\001\002\000\006\004" +
    "\151\031\uffed\001\002\000\014\031\uffec\067\013\104\004" +
    "\105\005\110\014\001\002\000\004\031\uffee\001\002\000" +
    "\004\002\uffff\001\002\000\004\002\000\001\002\000\004" +
    "\030\156\001\002\000\014\031\uffec\067\013\104\004\105" +
    "\005\110\014\001\002\000\004\031\160\001\002\000\004" +
    "\034\161\001\002\000\030\006\057\007\051\021\050\030" +
    "\052\062\053\063\054\067\013\070\015\104\004\105\005" +
    "\110\014\001\002\000\004\035\163\001\002\000\004\005" +
    "\164\001\002\000\020\002\uffef\067\uffef\070\uffef\104\uffef" +
    "\105\uffef\110\uffef\121\uffef\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\163\000\012\003\005\004\011\006\010\007\007\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\003\005" +
    "\004\011\006\010\007\164\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\003\005\004\011\006\010\007\152" +
    "\001\001\000\006\005\034\010\033\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\015\001\001\000\006" +
    "\005\020\010\017\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\025\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\004\040\012\041\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\003\057\004\046" +
    "\013\054\015\045\016\061\017\044\020\060\021\055\001" +
    "\001\000\022\003\057\004\046\013\146\015\045\016\061" +
    "\017\044\020\060\021\055\001\001\000\002\001\001\000" +
    "\006\005\034\010\033\001\001\000\006\016\127\020\145" +
    "\001\001\000\002\001\001\000\006\016\141\020\142\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\022\003\057\004" +
    "\046\013\132\015\045\016\061\017\044\020\060\021\055" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\016" +
    "\124\001\001\000\004\016\123\001\001\000\004\016\122" +
    "\001\001\000\004\016\121\001\001\000\004\016\120\001" +
    "\001\000\004\016\117\001\001\000\004\016\116\001\001" +
    "\000\004\016\115\001\001\000\004\016\114\001\001\000" +
    "\004\016\113\001\001\000\004\016\112\001\001\000\004" +
    "\016\111\001\001\000\004\016\110\001\001\000\004\016" +
    "\107\001\001\000\004\016\106\001\001\000\004\016\102" +
    "\001\001\000\002\001\001\000\004\016\104\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\016\127\020\131\001\001\000\006\016" +
    "\127\020\130\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\004\040\012" +
    "\151\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\004\040\012\156\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\003\057" +
    "\004\046\013\161\015\045\016\061\017\044\020\060\021" +
    "\055\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CParser$actions {
  private final CParser parser;

  /** Constructor */
  CUP$CParser$actions(CParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CParser$do_action(
    int                        CUP$CParser$act_num,
    java_cup.runtime.lr_parser CUP$CParser$parser,
    java.util.Stack            CUP$CParser$stack,
    int                        CUP$CParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CParser$result;

      /* select the action based on the action number */
      switch (CUP$CParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // booleanExpression ::= LPAREN booleanExpression RPAREN 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // booleanExpression ::= NOT booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // booleanExpression ::= booleanExpression ANDAND booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // booleanExpression ::= booleanExpression OROR booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // booleanExpression ::= arithmeticExpression LESS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // booleanExpression ::= arithmeticExpression LESSEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // booleanExpression ::= arithmeticExpression GREATER arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // booleanExpression ::= arithmeticExpression GREATEREQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // booleanExpression ::= arithmeticExpression NOTEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // booleanExpression ::= arithmeticExpression EQUALS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(14/*booleanExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // arithmeticExpression ::= LPAREN arithmeticExpression RPAREN 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // arithmeticExpression ::= ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // arithmeticExpression ::= NUM 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // arithmeticExpression ::= DECREMENT ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // arithmeticExpression ::= INCREMENT ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // arithmeticExpression ::= ID DECREMENT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // arithmeticExpression ::= ID INCREMENT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // arithmeticExpression ::= arithmeticExpression DIVIDEEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // arithmeticExpression ::= arithmeticExpression TIMESEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // arithmeticExpression ::= arithmeticExpression MINUSEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // arithmeticExpression ::= arithmeticExpression PLUSEQUAL arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // arithmeticExpression ::= arithmeticExpression ASSIGN arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // arithmeticExpression ::= arithmeticExpression MODULO arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // arithmeticExpression ::= arithmeticExpression DIVIDE arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // arithmeticExpression ::= arithmeticExpression TIMES arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // arithmeticExpression ::= arithmeticExpression MINUS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // arithmeticExpression ::= arithmeticExpression PLUS arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(12/*arithmeticExpression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // expression ::= arithmeticExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(15/*expression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // expression ::= booleanExpression 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(15/*expression*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // statement ::= funcBody 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(13/*statement*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // statement ::= expression SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(13/*statement*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // funcImpl ::= statement 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // funcImpl ::= statement funcImpl 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // funcImpl ::= varDeclaration funcImpl 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*funcImpl*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // paramChain ::= 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // paramChain ::= type ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // paramChain ::= type ID COMMA paramChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // funcDeclaration ::= VOID ID LPAREN paramChain RPAREN LBRACE funcImpl RBRACE SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(4/*funcDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // funcDeclaration ::= type ID LPAREN paramChain RPAREN LBRACE funcImpl RBRACE SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(4/*funcDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // asignationChain ::= NUM 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(7/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // asignationChain ::= NUM COMMA asignationChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(7/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // varAsignation ::= idChain ASSIGN asignationChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(6/*varAsignation*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // type ::= SHORT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // type ::= LONG 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // type ::= CHAR 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // type ::= INT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // idChain ::= ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // idChain ::= idChain COMMA ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // varDeclaration ::= type varAsignation SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // varDeclaration ::= CONST type varAsignation SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // varDeclaration ::= type idChain SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // varDeclaration ::= CONST type idChain SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // globalProg ::= funcDeclaration 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // globalProg ::= funcDeclaration globalProg 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= globalProg EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CParser$stack.elementAt(CUP$CParser$top-1)).value;
		RESULT = start_val;
              CUP$CParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$CParser$parser.done_parsing();
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // globalProg ::= varDeclaration globalProg 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}


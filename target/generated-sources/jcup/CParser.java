
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Fri Nov 01 20:52:15 UTC 2024
//----------------------------------------------------


/** CUP v0.10k generated parser.
  * @version Fri Nov 01 20:52:15 UTC 2024
  */
public class CParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CParser() {super();}

  /** Constructor which sets the default scanner. */
  public CParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\027\000\002\007\004\000\002\002\004\000\002\007" +
    "\004\000\002\007\003\000\002\003\006\000\002\003\005" +
    "\000\002\003\007\000\002\003\006\000\002\005\005\000" +
    "\002\005\003\000\002\004\003\000\002\004\003\000\002" +
    "\004\003\000\002\004\003\000\002\011\003\000\002\011" +
    "\003\000\002\010\004\000\002\012\005\000\002\012\003" +
    "\000\002\006\012\000\002\006\012\000\002\013\004\000" +
    "\002\013\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\061\000\016\067\013\070\015\104\004\105\005\110" +
    "\014\121\007\001\002\000\004\062\ufff7\001\002\000\004" +
    "\062\ufff5\001\002\000\016\067\013\070\015\104\004\105" +
    "\005\110\014\121\007\001\002\000\004\062\054\001\002" +
    "\000\004\002\053\001\002\000\020\002\ufffe\067\013\070" +
    "\015\104\004\105\005\110\014\121\007\001\002\000\004" +
    "\062\035\001\002\000\004\062\ufff6\001\002\000\004\062" +
    "\ufff4\001\002\000\012\067\013\104\004\105\005\110\014" +
    "\001\002\000\004\062\017\001\002\000\012\004\033\005" +
    "\ufff8\022\ufff8\031\ufff8\001\002\000\006\005\021\022\023" +
    "\001\002\000\016\067\ufffd\070\ufffd\104\ufffd\105\ufffd\110" +
    "\ufffd\121\ufffd\001\002\000\004\005\032\001\002\000\006" +
    "\063\024\124\025\001\002\000\006\004\ufff3\005\ufff3\001" +
    "\002\000\006\004\ufff2\005\ufff2\001\002\000\004\005\ufff1" +
    "\001\002\000\006\004\030\005\uffef\001\002\000\006\063" +
    "\024\124\025\001\002\000\004\005\ufff0\001\002\000\016" +
    "\067\ufffb\070\ufffb\104\ufffb\105\ufffb\110\ufffb\121\ufffb\001" +
    "\002\000\004\062\017\001\002\000\010\005\ufff9\022\ufff9" +
    "\031\ufff9\001\002\000\012\004\033\005\ufff8\022\ufff8\030" +
    "\042\001\002\000\006\005\037\022\023\001\002\000\016" +
    "\067\ufffc\070\ufffc\104\ufffc\105\ufffc\110\ufffc\121\ufffc\001" +
    "\002\000\004\005\041\001\002\000\016\067\ufffa\070\ufffa" +
    "\104\ufffa\105\ufffa\110\ufffa\121\ufffa\001\002\000\014\031" +
    "\uffeb\067\013\104\004\105\005\110\014\001\002\000\004" +
    "\062\017\001\002\000\004\031\045\001\002\000\004\034" +
    "\046\001\002\000\004\035\047\001\002\000\004\005\050" +
    "\001\002\000\020\002\uffee\067\uffee\070\uffee\104\uffee\105" +
    "\uffee\110\uffee\121\uffee\001\002\000\004\031\uffec\001\002" +
    "\000\004\002\uffff\001\002\000\004\002\000\001\002\000" +
    "\004\030\055\001\002\000\014\031\uffeb\067\013\104\004" +
    "\105\005\110\014\001\002\000\004\031\057\001\002\000" +
    "\004\034\060\001\002\000\004\035\061\001\002\000\004" +
    "\005\062\001\002\000\020\002\uffed\067\uffed\070\uffed\104" +
    "\uffed\105\uffed\110\uffed\121\uffed\001\002\000\004\002\001" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\061\000\012\003\005\004\011\006\010\007\007\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\003\005" +
    "\004\011\006\010\007\062\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\003\005\004\011\006\010\007\051" +
    "\001\001\000\004\005\035\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\015\001\001\000\004\005\017" +
    "\001\001\000\002\001\001\000\004\010\021\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\026\012\025" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\011\026\012\030\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\033\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\037" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\004\042\013\043\001\001\000\004\005\050" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\004\042\013\055\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CParser$actions {
  private final CParser parser;

  /** Constructor */
  CUP$CParser$actions(CParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CParser$do_action(
    int                        CUP$CParser$act_num,
    java_cup.runtime.lr_parser CUP$CParser$parser,
    java.util.Stack            CUP$CParser$stack,
    int                        CUP$CParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CParser$result;

      /* select the action based on the action number */
      switch (CUP$CParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // paramChain ::= 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // paramChain ::= type idChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(9/*paramChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // funcDeclaration ::= VOID ID LPAREN paramChain RPAREN LBRACE RBRACE SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(4/*funcDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // funcDeclaration ::= type ID LPAREN paramChain RPAREN LBRACE RBRACE SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(4/*funcDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // asignationChain ::= valueType 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // asignationChain ::= valueType COMMA asignationChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(8/*asignationChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // varAsignation ::= ASSIGN asignationChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(6/*varAsignation*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // valueType ::= STRING 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(7/*valueType*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // valueType ::= NUM 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(7/*valueType*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // type ::= SHORT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // type ::= LONG 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // type ::= CHAR 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // type ::= INT 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(2/*type*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // idChain ::= ID 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // idChain ::= ID COMMA idChain 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(3/*idChain*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // varDeclaration ::= type idChain varAsignation SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // varDeclaration ::= CONST type idChain varAsignation SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // varDeclaration ::= type idChain SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // varDeclaration ::= CONST type idChain SEMICOLON 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(1/*varDeclaration*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // globalProg ::= funcDeclaration 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // globalProg ::= funcDeclaration globalProg 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= globalProg EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CParser$stack.elementAt(CUP$CParser$top-1)).value;
		RESULT = start_val;
              CUP$CParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$CParser$parser.done_parsing();
          return CUP$CParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // globalProg ::= varDeclaration globalProg 
            {
              Object RESULT = null;

              CUP$CParser$result = new java_cup.runtime.Symbol(5/*globalProg*/, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$CParser$stack.elementAt(CUP$CParser$top-0)).right, RESULT);
            }
          return CUP$CParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

